@model UserProfileDto
@{
    var title = Model.IsEditMode ? "Profil Düzenle" : "Hesap Oluştur";
    var buttonText = Model.IsEditMode ? "Profili Güncelle" : "Kayıt Ol";
    var action = Model.IsEditMode ? "Update" : "Register";
    var subtitle = Model.IsEditMode ? "Bilgilerinizi güncelleyin" : "Yeni hesabınızı oluşturun";
    var iconClass = Model.IsEditMode ? "fas fa-user-edit" : "fas fa-user-plus";
    ViewData["Title"] = title;
}

<div class="register-container">
    <div class="register-card">
        <div class="register-header">
            <div class="register-icon">
                <i class="@iconClass"></i>
            </div>
            <h2 class="register-title">@title</h2>
            <p class="register-subtitle">@subtitle</p>
        </div>
        <form id="fakeTokenForm">@Html.AntiForgeryToken()</form>
        <form method="post" asp-action="@action" class="register-form">
            <input type="hidden" asp-for="@Model.IsEditMode" />
            @if (!ViewData.ModelState.IsValid && ViewData.ModelState.ErrorCount > 0)
            {
                <div class="modern-alert modern-alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <div asp-validation-summary="All" class="mb-0"></div>
                </div>
            }

            <div class="form-row">
                <div class="form-group-modern">
                    <div class="input-wrapper">
                        <i class="fas fa-user input-icon"></i>
                        <input type="text" class="form-control-modern" asp-for="FullName" placeholder="Ad ve soyadınızı girin" required />
                        <label asp-for="FullName" class="form-label-modern">Ad Soyad</label>
                    </div>
                </div>

                <div class="form-group-modern">
                    <div class="input-wrapper">
                        <i class="fas fa-envelope input-icon"></i>
                        <input type="email" class="form-control-modern" asp-for="Email" placeholder="Email adresinizi girin" required />
                        <label asp-for="Email" class="form-label-modern">Email</label>
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group-modern-password">
                    <div class="input-wrapper-password">
                        <i class="fas fa-lock input-icon"></i>
                        <input type="password" class="form-control-modern" asp-for="Password" placeholder="Şifrenizi girin" required oninput="calculateStrength(this.value)" />
                        <label asp-for="Password" class="form-label-modern">Şifre</label>
                        <button type="button" class="password-toggle" onclick="togglePassword('Password')">
                            <i class="fas fa-eye" id="toggleIconPassword"></i>
                        </button>
                    </div>
                </div>

                <div class="form-group-modern-password">
                    <div class="input-wrapper-password">
                        <i class="fas fa-lock input-icon"></i>
                        <input type="password" class="form-control-modern" asp-for="ConfirmPassword" placeholder="Şifrenizi tekrar girin" required />
                        <label asp-for="ConfirmPassword" class="form-label-modern">Şifre Tekrar</label>
                        <button type="button" class="password-toggle" onclick="togglePassword('ConfirmPassword')">
                            <i class="fas fa-eye" id="toggleIconConfirmPassword"></i>
                        </button>
                    </div>
                </div>
            </div>

            <div class="form-row-strength">
                <div class="password-strength-group">
                    <div class="password-strength-header">
                        <span class="password-strength-title">Şifre Gücü:</span>
                        <span class="password-strength-level" style="color: #a0aec0">Çok Zayıf</span>
                    </div>
                    <div class="password-strength-bar">
                        <div class="strength-bar" id="passwordStrengthBar">
                            <div id="strength-level" style="width: 0%;"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group-modern">
                <div class="input-wrapper date-wrapper">
                    <i class="fas fa-calendar-alt input-icon"></i>
                    <input type="date" class="form-control-modern date-input has-value" asp-for="BirthDate" min="@DateOnly.FromDateTime(DateTime.Now.AddYears(-100)).ToString("yyyy-MM-dd")" max="@DateOnly.FromDateTime(DateTime.Now.AddYears(-18)).ToString("yyyy-MM-dd")" required />
                    <label asp-for="BirthDate" class="form-label-modern">Doğum Tarihi</label>
                </div>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn-modern btn-primary-modern">
                    <i class="@(Model.IsEditMode ? "fas fa-save" : "fas fa-user-plus") me-2"></i>
                    @buttonText
                </button>

                <div class="secondary-actions">
                    @if (Model.IsEditMode)
                    {
                        <button type="button" class="btn-modern btn-danger-modern" onclick="deleteClick('@Model.FullName')">
                            <i class="fas fa-trash me-2"></i>
                            Hesabı Sil
                        </button>
                    }
                    else
                    {
                        <div class="action-row">
                            <button type="reset" class="btn-modern btn-outline-modern">
                                <i class="fas fa-eraser me-2"></i>
                                Temizle
                            </button>
                            <a class="btn-modern btn-secondary-modern" asp-area="Management" asp-controller="User" asp-action="Login">
                                <i class="fas fa-sign-in-alt me-2"></i>
                                Giriş Yap
                            </a>
                        </div>
                    }
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
    function togglePassword(fieldName) {
        const passwordInput = document.getElementById(`${fieldName}`);
        const toggleIcon = document.getElementById(`toggleIcon${fieldName}`);
        
        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            toggleIcon.className = 'fas fa-eye-slash';
        } else {
            passwordInput.type = 'password';
            toggleIcon.className = 'fas fa-eye';
        }
    }

    function deleteClick(itemName) {
        const confirmCard = document.createElement('div');
        confirmCard.className = 'confirm-card';
        confirmCard.innerHTML = `
            <p class="confirm-card-header">
                <i class="fas fa-exclamation-triangle"></i>
                Hesabı Sil
            </p>
            <p class="confirm-card-content">
                ${itemName} kişisi ve oluşturduğu bütün etkinlikler silinecek! İşleme devam etmek istiyor musunuz?
            </p>
            <div class="confirm-card-buttonContainer">
                <button class="acceptButton">Evet</button>
                <button class="declineButton">İptal</button>
            </div>
        `;
        document.body.appendChild(confirmCard);

        const acceptBtn = confirmCard.querySelector('.acceptButton');
        const declineBtn = confirmCard.querySelector('.declineButton');

        acceptBtn.addEventListener('click', () => deleteUser());
        declineBtn.addEventListener('click', () => 
        {
            confirmCard.remove(); 
            window.location.href = '@Url.Action("Profile", "User", new { area = "Management" })';
        });
    }

    function deleteUser() {
        const form = document.createElement('form');
        form.method = 'post';
        form.action = '@Url.Action("Delete")';

        const token = document.querySelector('input[name="__RequestVerificationToken"]');
        if (token) {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = '__RequestVerificationToken';
            input.value = token.value;
            form.appendChild(input);
        }

        document.body.appendChild(form);
        form.submit();
    }

    function calculateStrength(password) {
        const strengthBar = document.getElementById('strength-level');
        const strengthLevel = document.querySelector('.password-strength-level');

        let strength = 0;

        if (password.length >= 8) strength += 1;
        if (/[A-Z]/.test(password)) strength += 1;
        if (/[0-9]/.test(password)) strength += 1;
        if (/[a-z]/.test(password)) strength += 1;

        switch (strength) {
            case 0:
                strengthBar.style.width = '0%';
                strengthBar.style.backgroundColor = '#a0aec0';
                strengthLevel.textContent = 'Çok Zayıf';
                strengthLevel.style.color = '#a0aec0';
                break;
            case 1:
                strengthBar.style.width = '25%';
                strengthBar.style.backgroundColor = '#a61414';
                strengthLevel.textContent = 'Zayıf';
                strengthLevel.style.color = '#a61414';
                break;
            case 2:
                strengthBar.style.width = '50%';
                strengthBar.style.backgroundColor = '#b85804';
                strengthLevel.textContent = 'Orta';
                strengthLevel.style.color = '#b85804';
                break;
            case 3:
                strengthBar.style.width = '75%';
                strengthBar.style.backgroundColor = '#b3970c';
                strengthLevel.textContent = 'İyi';
                strengthLevel.style.color = '#b3970c';
                break;
            case 4:
                strengthBar.style.width = '100%';
                strengthBar.style.backgroundColor = '#277d02';
                strengthLevel.textContent = 'Güçlü';
                strengthLevel.style.color = '#277d02';
                break;
        }
    }
    </script>
}